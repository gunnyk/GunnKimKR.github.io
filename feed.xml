<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://gunnkimkr.github.io/</id><title>Gunn’s Blog</title><subtitle>프론트엔드 개발자 김건의 블로그입니다. 개발에 관한 정보를 공유하는 것은 물론, 다양한 주제의 소통창구로 이용할 수 있습니다.</subtitle> <updated>2021-07-06T18:26:12+09:00</updated> <author> <name>Gunn Kim</name> <uri>https://gunnkimkr.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://gunnkimkr.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://gunnkimkr.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Gunn Kim </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Electron - 일렉트론 앱 만들기(Create an Electron App)</title><link href="https://gunnkimkr.github.io/posts/electron-create-an-electron-app/" rel="alternate" type="text/html" title="Electron - 일렉트론 앱 만들기(Create an Electron App)" /><published>2021-07-02T03:25:00+09:00</published> <updated>2021-07-02T03:25:00+09:00</updated> <id>https://gunnkimkr.github.io/posts/electron-create-an-electron-app/</id> <content src="https://gunnkimkr.github.io/posts/electron-create-an-electron-app/" /> <author> <name>Gunn Kim</name> </author> <category term="Framework" /> <category term="Electron" /> <summary> 일렉트론 시작하기 초기 셋업 일랙트론을 시작하기 위해서는 Node.js, npm, Electron, Chromium을 설치해야한다. Node.js와 npm 설치 후 터미널에 다음 명령을 실행해 관련 패키지를 설치한다. npm i -D electron@latest 프로젝트 폴더를 만들고 터미널에 다음 명령을 실행해 관련 패키지를 설치한다. npm install --save-dev electron package.json 파일의 형식은 다음과 같아야 한다. { "name": "my-electron-app", "version": "1.0.0", "description": "Hello World!", "main": "main.js", "author": "my name", ... </summary> </entry> <entry><title>JavaScript - 자료형(Data types) &amp; 문자형(String)</title><link href="https://gunnkimkr.github.io/posts/javascript-data-types-string/" rel="alternate" type="text/html" title="JavaScript - 자료형(Data types) &amp; 문자형(String)" /><published>2021-07-01T22:55:00+09:00</published> <updated>2021-07-01T22:55:00+09:00</updated> <id>https://gunnkimkr.github.io/posts/javascript-data-types-string/</id> <content src="https://gunnkimkr.github.io/posts/javascript-data-types-string/" /> <author> <name>Gunn Kim</name> </author> <category term="Programming" /> <category term="JavaScript" /> <summary> 문자형 자바스크립트는 타 언어와 같이 글자 하나만 저장하는 자료형이 없다. 모든 글자는 문자열 형태로 저장되며, 인코딩 방식에 상관없이 UTF-16 형식을 따른다.1 'use strict' let str = 'Hello'; str[0] = 'J'; // TypeError: Attempted to assign to readonly property. console.log(str[0]); // 'H' 자바스크립트의 문자열은 immutable이기 때문에 글자를 바꾸려고 하면 읽기 전용 속성에 할당을 시도했다며 TypeError가 발생한다. 문자열을 바꾸려면 새로운 문자열을 생성한 후 변수에 할당하면 된다. 문자열 관련 메서드 특정 위치의 글자 찾기 - charAt let str = 'He... </summary> </entry> <entry><title>JavaScript - 자료형(Data types) &amp; 숫자형(Number)</title><link href="https://gunnkimkr.github.io/posts/javascript-data-types-number/" rel="alternate" type="text/html" title="JavaScript - 자료형(Data types) &amp; 숫자형(Number)" /><published>2021-06-30T17:20:00+09:00</published> <updated>2021-06-30T17:20:00+09:00</updated> <id>https://gunnkimkr.github.io/posts/javascript-data-types-number/</id> <content src="https://gunnkimkr.github.io/posts/javascript-data-types-number/" /> <author> <name>Gunn Kim</name> </author> <category term="Programming" /> <category term="JavaScript" /> <summary> 숫자형 15; // 15 15.134; // 15.134 010 // 8 0xA // 10 2 ** 9999 // Infinity (-2) ** 9999 // -Infinity 15.00 // 15 1 * (10 ** 21) // 1e+21 1 / 10000000 // 1e-7 1 / '문자' // NaN 4번 줄은 8진법으로 숫자 8을 표현했다. 8진수는 첫 번째 숫자가 0으로 시작해야 한다. 5번 줄은 16진법으로 숫자 10을 표현했다. 16진수는 0x로 시작해야 한다. 7번과 8번 줄은 ECMAScript로 나타낼 수 있는 숫자 범위를 벗어났기 때문에 양의 무한대 Infinity와 음의 무한대 -Infinity로 결과가 출력됐다. 연산 결과로 Infinity 값을 반환하면 더 이... </summary> </entry> <entry><title>JavaScript - 함수(Functions) &amp; 매개변수(Parameter)</title><link href="https://gunnkimkr.github.io/posts/javascript-functions-parameter/" rel="alternate" type="text/html" title="JavaScript - 함수(Functions) &amp; 매개변수(Parameter)" /><published>2021-06-27T14:10:00+09:00</published> <updated>2021-06-27T14:10:00+09:00</updated> <id>https://gunnkimkr.github.io/posts/javascript-functions-parameter/</id> <content src="https://gunnkimkr.github.io/posts/javascript-functions-parameter/" /> <author> <name>Gunn Kim</name> </author> <category term="Programming" /> <category term="JavaScript" /> <summary> 함수의 매개변수 매개변수 function sum() { let total = 0; for(arg in arguments) { total += arguments[arg]; } console.log(total); } sum(10, 5); // 15 sum(10, ' 더하기 ', 5, '는?'); // 10 더하기 5는? sum함수의 매개변수를 선언하지 않았지만 sum함수를 호출할 때 여러 개의 인자를 매개변수로 넘겼다. 하지만 인터프리터는 에러로 판단하지 않으며, 프로그램은 정상적으로 동작한다. 이는 자바스크립트의 언어의 특징으로 함수 시그니처를 약타입으로 정의하기 때문에 함수에 선언된 매개변개수나 타입에 상관없이 인자로 값을 전달할 수 있다. 자바스크립트의 매개변수는 다... </summary> </entry> </feed>
